name: CI

on: [push, pull_request]
permissions:
      pull-requests: write

jobs:

  test:
    name: Unit tests

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    
    steps:
      - uses: actions/checkout@v2
      - name: set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
      - name: run tests
        run: python -m pytest tests/

deploy:
    name: Deploy to GitHub and PyPI
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.repository_owner == 'ph-tools'
    steps:
      - uses: actions/checkout@v2
      - name: set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: set up node  # we need node for for semantic release
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14.2.0
      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
      - name: install semantic-release
        run:
          npm install @semantic-release/exec
      - name: run semantic release
        id: new_release
        run: |
          nextRelease="`npx semantic-release@^17.0.0 --dryRun | grep -oP 'Published release \K.*? ' || true`"
          npx semantic-release@^17.0.0
          echo "::set-output name=tag::$nextRelease"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
      - name: sleep for 10 minutes for PyPI update
        if: contains(steps.new_release.outputs.tag, '.')
        run: sleep 600s
        shell: bash
      - name: Update honeybee-ph
        if: contains(steps.new_release.outputs.tag, '.')
        env:
          DISPATCH_REPO: ph-tools/honeybee_ph
          DEPS_TOKEN: ${{ secrets.DEPS_UPDATING }}
        run: |
          curl -X POST https://api.github.com/repos/$DISPATCH_REPO/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -d '{"event_type": "honeybee_ph_release", "client_payload": {"version": "${{ steps.new_release.outputs.tag }}"}}' \
          -u ladybugbot:$DEPS_TOKEN
